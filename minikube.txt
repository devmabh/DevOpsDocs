sudo -i
export PATH=$PATH:/usr/local/bin/

yum update
yum install yum-utils device-mapper-persistent-data lvm2
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
yum install docker-ce
systemctl start docker
systemctl enable docker 
systemctl status docker
docker -v
 
curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.8.7/bin/linux/amd64/kubectl
chmod +x ./kubectl
mv ./kubectl /usr/local/bin/kubectl
kubectl version
 
 
curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.23.0/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
 
minikube start --vm-driver=none
kubectl run hello-minikube --image=gcr.io/google_containers/echoserver:1.4 --port=8080
kubectl expose deployment hello-minikube  --type=NodePort
kubectl get pod
curl $(minikube service hello-minikube --url)

===============
FOR DEPLOYEMENT 
===============
vi nginx-deployment.yaml
-----------------------------
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.15.4
        ports:
        - containerPort: 80
------------------------------
kubectl create -f nginx-deployment.yaml
kubectl get pod

=============
FOR SERVICE
=============

vi nginx-service.yaml

---------------------------
apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    name: nginx
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 80
      nodePort: 30001
      protocol: TCP
  selector:
    app: nginx

---

-----------------------------
kubectl create -f nginx-service.yaml
kubectl get service 


=====================================

DOCKER_REGISTRY_SERVER=docker.io
DOCKER_USER=devmabh
DOCKER_EMAIL=mamta.bharti9039@gmail.com 
DOCKER_PASSWORD=Srcm@2018 

kubectl create secret docker-registry dockerimage \
  --docker-server=docker.io \
  --docker-username=devmabh \
  --docker-password=Srcm@2018  \
  --docker-email=mamta.bharti9039@gmail.com

Important link 
=============
https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
https://linuxize.com/post/how-to-install-and-use-docker-on-centos-7/
https://stackoverflow.com/questions/36232906/how-to-access-private-docker-hub-repository-from-kubernetes-on-vagrant


curl $(minikube service springboot-deployement --url)


springboot-deployment.yaml 


apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: spring-deployment
  labels:
    app: springboot
spec:
  replicas: 3
  selector:
    matchLabels:
      app: springboot
  template:
    metadata:
      labels:
        app: springboot
    spec:
      containers:
      - name: sprint
        image: devmabh/springboot
        imagePullPolicy: Always
        command: [ "echo", "SUCCESS" ]
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: dockerimage


vi springboot-service.yaml 

apiVersion: v1
kind: Service
metadata:
  name: springboot-deployement
  labels:
    name: springboot
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 80
      nodePort: 30002
      protocol: TCP
  selector:
    app: springboot
====================================

To create name space 
kubectl get ns 
kubectl create ns devops1 


=======================================
kind means (deployement or service)
Replica means pods 
kubectl : To control kubernetes
